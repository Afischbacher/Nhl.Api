<#@ template debug="false" hostspecific="false" language="C#" #>

<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)Nhl.Api\bin\$(ConfigurationName)\netstandard2.0\Nhl.Api.dll" #>
<#@ assembly name="$(SolutionDir)Nhl.Api\bin\$(ConfigurationName)\netstandard2.0\Nhl.Api.Domain.dll" #>
<#@ assembly name="$(SolutionDir)Nhl.Api.Tests\bin\Debug\netcoreapp3.1\Newtonsoft.Json.dll" #>
<#@ assembly name="NetStandard" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="Nhl.Api" #>
<#@ import namespace="Nhl.Api.Domain.Models.Team" #>
<#@ import namespace="Nhl.Api.Domain.Models.League" #>
<#@ import namespace="Nhl.Api.Domain.Models.Player" #>
<#@ import namespace="Nhl.Api.Models.Player" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Collections.Concurrent" #>
<#@ output extension=".cs" #>

namespace Nhl.Api.Models.Enumerations.Player
{
	/// <summary>
	/// A collection of all NHL players
	/// </summary>
	public enum PlayerEnum
	{
	<#
	var nhlApi = new NhlApi();
	var players = new ConcurrentBag<Player>();

	Parallel.For(8444850, 84870000, new ParallelOptions { MaxDegreeOfParallelism = 32 }, (i) => 
	{
		try
		{
			Player playerObject = null;
			Task.Run(() => playerObject = nhlApi.GetPlayerByIdAsync(i).Result).Wait();
			if (playerObject == null) return;
			players.Add(playerObject);
		} catch 
		{
			throw;
		}
	});
		
	#>

	<#foreach(var player in players)
	{#>
	<#= System.Text.RegularExpressions.Regex.Replace(player.FullName, @"('|\.|\s|-|_|&|)","")#><#=player.Id #> = <#= player.Id #>,
	<#}#>
}
}